var string = require('string'); // load string.js first to avoid https://github.com/jprichardson/string.js/issues/160

var express 	= require('express'),
	app     	= express(),
	ibmbluemix 	= require('ibmbluemix'),
	config  	= {
		// change to real application route assigned for your application
		applicationRoute : "http://imageclassifydemo.mybluemix.net/",
		// change to real application ID generated by Bluemix for your application
		applicationId : "0a74d303-86fa-4f01-b2a3-c61141e63e74"
	};

var watson = require('watson-developer-cloud');
var fs = require('fs');
	
var formidable = require('formidable');

/* This could be read from environment variables on Bluemix */
var visual_recognition = watson.visual_recognition({
  api_key: '8ad44127ca1d02acbf19d3548ce102d2a10beb19',
  version: 'v3',
  version_date: '2016-05-20'
});

// init core sdk
ibmbluemix.initialize(config);
var logger = ibmbluemix.getLogger();

//redirect to cloudcode doc page when accessing the root context
app.get('/', function(req, res){
	res.sendfile('public/index.html');
});

app.get('/desktop', function(req, res){
	res.sendfile('public/desktop.html');
});

app.post('/uploadpic', function(req, result) {
	
	console.log('uploadpic');
	
	var form = new formidable.IncomingForm();
	form.keepExtensions = true;
	
    form.parse(req, function(err, fields, files) {
		var params = {
			images_file: fs.createReadStream(files.image.path),
			//images_file: fs.createReadStream('test.jpg'),
			classifier_ids:[ "VirtusaPolaris_506010398" ]
			//"classifier_ids": "VirtusaPolaris_506010398"
		};
	 
		visual_recognition.classify(params, function(err, res) {
		  if (err) {
		    console.log(err);
		console.error(err.stack);
		}
		  else {
			  console.log(JSON.stringify(res, null, 2));
			  var results = [];
			  //for(var i=0;i<res.images[0].labels.length;i++) {
				//results.push(res.images[0].labels[i].label_name);  
			  //}
			  for(var i=0;i<res.images[0].classifiers[0].classes.length;i++) { 
			  results.push(res.images[0].classifiers[0].classes[i].class);
			  results.push(res.images[0].classifiers[0].classes[i].score);
			  }
			  console.log('got '+results.length+' label');

			  /* simple toggle for desktop/mobile mode */
			  if(!fields.mode) {
				  result.send(results);
			  } else {				
				result.send("<h2>Results from Watson</h2>"+results.join(', '));  
			  }
		  }
		});

    });
	
});

// init service sdks 
app.use(function(req, res, next) {
    req.logger = logger;
    next();
});

// init basics for an express app
app.use(require('./lib/setup'));

var ibmconfig = ibmbluemix.getConfig();

logger.info('mbaas context root: '+ibmconfig.getContextRoot());
// "Require" modules and files containing endpoints and apply the routes to our application
app.use(ibmconfig.getContextRoot(), require('./lib/staticfile'));

app.listen(ibmconfig.getPort());
logger.info('Server started at port: '+ibmconfig.getPort());
